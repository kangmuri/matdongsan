<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.mat.mypage.mapper.ProfileMapper">
	<resultMap type="MyProfileVO" id="profileMap" autoMapping="true">
		<id property="userNo" column="USER_NO"/>
		<association property="tbAttachFileVO" javaType="TbAttachFileVO" autoMapping="true"></association>
	</resultMap>

<!-- 회원정보 수정 (이미지 포함) -->
<update id="updateProfile" parameterType="MyProfileVO">
	UPDATE USERS
    SET
         USER_NM = #{userNm,jdbcType=VARCHAR}
        ,USER_MBTLNUM = #{userMbtlnum,jdbcType=VARCHAR}
        ,USER_EMAIL = #{userEmail,jdbcType=VARCHAR}
        ,UNITY_ATCHMNFL_NO = #{unityAtchmnflNo,jdbcType=VARCHAR}
	WHERE
	    USER_NO = #{userNo,jdbcType=VARCHAR}
</update>

<!-- 회원정보 수정 (이미지 미포함) -->
<update id="noImgupdateProfile" parameterType="MyProfileVO">
	UPDATE USERS
    SET
         USER_NM = #{userNm,jdbcType=VARCHAR}
        ,USER_MBTLNUM = #{userMbtlnum,jdbcType=VARCHAR}
        ,USER_EMAIL = #{userEmail,jdbcType=VARCHAR}
	WHERE
	    USER_NO = #{userNo,jdbcType=VARCHAR}
</update>




<!-- 비밀번호 수정 -->
<update id="updatePassword" parameterType="MyProfileVO">
	UPDATE USERS
    SET
         USER_PW = #{userPw ,jdbcType=VARCHAR}
	WHERE
	    USER_NO = #{userNo,jdbcType=VARCHAR}
</update>

<!-- 현재 비밀번호가 맞는지 체크 -->
<select id="passwordCk" parameterType="MyProfileVO" resultType="MyProfileVO">
	SELECT USER_PW
	FROM USERS
	WHERE USER_NO = #{userNo,jdbcType=VARCHAR}
</select>




<!-- 유저 프로필 이미지 등록 -->
<insert id="insertProfileImg" parameterType="TbAttachFileVO">
	<selectKey order="BEFORE" resultType="string" keyProperty="unityAtchmnflNo">
    SELECT 
    'TA'
    ||TO_NUMBER(TO_CHAR(SYSDATE, 'YYMMDD'))
    ||LPAD(NVL(TO_NUMBER(SUBSTR(MAX(UNITY_ATCHMNFL_NO),9)),0)+1,3,'0')
    FROM TB_ATTACH_FILE
	</selectKey>
	INSERT INTO TB_ATTACH_FILE (
	    UNITY_ATCHMNFL_NO
	    ,ATCHMNFL_SN
	    ,FILE_PATH
	    ,WEB_PATH
	    ,STRE_FILE_NM
	    ,FILE_SIZE
	    ,FILE_TYPE
	    ,REG_DT
	    ,REG_USER_ID
	    ,UPD_DT
	) VALUES (
	      #{unityAtchmnflNo,jdbcType=VARCHAR}
	    , #{atchmnflSn,jdbcType=NUMERIC}
		, #{filePath,jdbcType=VARCHAR}
		, #{webPath,jdbcType=VARCHAR}
		, #{streFileNm,jdbcType=VARCHAR}
		, #{fileSize,jdbcType=NUMERIC}
		, 'PROFILEIMG'
	    , SYSDATE
	    , #{regUserId,jdbcType=VARCHAR}
	    , SYSDATE
	)
</insert>


<!-- 유저가 등록한 프로필 이미지의 pk값 가져오기 -->
<select id="selectProfilePkImg" parameterType="TbAttachFileVO" resultType="TbAttachFileVO">
	SELECT 
		 UNITY_ATCHMNFL_NO
      FROM TB_ATTACH_FILE
     WHERE REG_USER_ID = #{regUserId,jdbcType=VARCHAR}
       AND FILE_TYPE = 'PROFILEIMG'
</select>

<!-- 바뀐 프로필 이미지를 적용 -->
<update id="updateProfileImg" parameterType="TbAttachFileVO">
	UPDATE TB_ATTACH_FILE
	    SET
	         FILE_PATH = #{filePath,jdbcType=VARCHAR}
	        ,WEB_PATH = #{webPath,jdbcType=VARCHAR}
	        ,STRE_FILE_NM = #{streFileNm,jdbcType=VARCHAR}
	        ,FILE_SIZE = #{fileSize,jdbcType=NUMERIC}
	        ,FILE_TYPE = #{fileType,jdbcType=VARCHAR}
	        ,UPD_DT = SYSDATE
	        ,UPD_USER_ID = #{updUserId,jdbcType=VARCHAR}
	 WHERE UNITY_ATCHMNFL_NO = #{unityAtchmnflNo,jdbcType=VARCHAR}
	   AND   REG_USER_ID = #{regUserId,jdbcType=VARCHAR}
</update>

<select id="selectUser" parameterType="MyProfileVO" resultMap="profileMap">
	SELECT
	    u.user_no,
	    u.user_nm,
	    u.user_id,
	    u.user_pw,
	    u.user_email,
	    u.user_mbtlnum,
	    u.user_sexdstn,
	    u.user_bir,
	    u.user_creat_on,
	    u.user_last_login_de,
	    u.user_rent_yn,
	    u.user_se,
	    u.user_del_yn,
	    tb.UNITY_ATCHMNFL_NO,
	    tb.web_path
	FROM users u left outer join tb_attach_file tb on(u.unity_atchmnfl_no = tb.unity_atchmnfl_no)
	WHERE u.user_id = #{userId, jdbcType=VARCHAR}
	AND u.user_del_yn = 'N'
</select>

<select id="selectUserByUserNo" parameterType="MyProfileVO" resultMap="profileMap">
	SELECT
	    u.user_no,
	    u.user_nm,
	    u.user_id,
	    u.user_pw,
	    u.user_email,
	    u.user_mbtlnum,
	    u.user_sexdstn,
	    u.user_bir,
	    u.user_creat_on,
	    u.user_last_login_de,
	    u.user_rent_yn,
	    u.user_se,
	    u.user_del_yn,
	    tb.UNITY_ATCHMNFL_NO,
	    tb.web_path
	FROM users u left outer join tb_attach_file tb on(u.unity_atchmnfl_no = tb.unity_atchmnfl_no)
	WHERE u.user_no = #{userNo, jdbcType=VARCHAR}
	AND u.user_del_yn = 'N'
</select>


</mapper>

